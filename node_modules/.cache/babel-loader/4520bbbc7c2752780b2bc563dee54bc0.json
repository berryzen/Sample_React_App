{"ast":null,"code":"import _asyncToGenerator from\"/home/user/mern/vincit-pre-assignment/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/user/mern/vincit-pre-assignment/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/user/mern/vincit-pre-assignment/node_modules/@babel/runtime/regenerator/index.js\";import React,{useRef,useState}from\"react\";//Voisi valita url ajan kirjoittamalla sen nappuloihin, voi olla placeholder aika esimerkkinä\n//Käy for loopilla kerran läpi json ja merkkaa siinä arvot\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var baseURL=\"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart\";var get_id=useRef(null);var get_title=useRef(null);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),getResult=_useState2[0],setGetResult=_useState2[1];var fortmatResponse=function fortmatResponse(res){return JSON.stringify(res,null,2);};function getAllData(){return _getAllData.apply(this,arguments);}// async function getDataById() {\n//   const id = get_id.current.value;\n//   if (id) {\n//     try {\n//       const res = await fetch(`${baseURL}/tutorials/${id}`);\n//       if (!res.ok) {\n//         const message = `An error has occured: ${res.status} - ${res.statusText}`;\n//         throw new Error(message);\n//       }\n//       const data = await res.json();\n//       const result = {\n//         data: data,\n//         status: res.status,\n//         statusText: res.statusText,\n//         headers: {\n//           \"Content-Type\": res.headers.get(\"Content-Type\"),\n//           \"Content-Length\": res.headers.get(\"Content-Length\"),\n//         },\n//       };\n//       setGetResult(fortmatResponse(result));\n//     } catch (err) {\n//       setGetResult(err.message);\n//     }\n//   }\n// }\n// async function getDataByTitle() {\n//   const title = get_title.current.value;\n//   if (title) {\n//     try {\n//       // const res = await fetch(`${baseURL}/tutorials?title=${title}`);\n//       let url = new URL(`${baseURL}/tutorials`);\n//       const params = { title: title };\n//       url.search = new URLSearchParams(params);\n//       const res = await fetch(url);\n//       if (!res.ok) {\n//         const message = `An error has occured: ${res.status} - ${res.statusText}`;\n//         throw new Error(message);\n//       }\n//       const data = await res.json();\n//       const result = {\n//         status: res.status + \"-\" + res.statusText,\n//         headers: {\n//           \"Content-Type\": res.headers.get(\"Content-Type\"),\n//           \"Content-Length\": res.headers.get(\"Content-Length\"),\n//         },\n//         data: data,\n//       };\n//       setGetResult(fortmatResponse(result));\n//     } catch (err) {\n//       setGetResult(err.message);\n//     }\n//   }\n// }\n// const clearGetOutput = () => {\n//   setGetResult(null);\n// }\nfunction _getAllData(){_getAllData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,message,data,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"\".concat(baseURL,\"/range?vs_currency=eur&from=1577836800&to=1609376400\"));case 3:res=_context.sent;if(res.ok){_context.next=7;break;}message=\"An error has occured: \".concat(res.status,\" - \").concat(res.statusText);throw new Error(message);case 7:_context.next=9;return res.json();case 9:data=_context.sent;result={status:res.status+\"-\"+res.statusText,headers:{\"Content-Type\":res.headers.get(\"Content-Type\"),\"Content-Length\":res.headers.get(\"Content-Length\")},length:res.headers.get(\"Content-Length\"),data:data};Object.values(data).forEach(function(value){console.log(value);});setGetResult(fortmatResponse(data));_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);setGetResult(_context.t0.message);case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,15]]);}));return _getAllData.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:\"React Fetch GET - BezKoder.com\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group input-group-sm\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm btn-primary\",onClick:getAllData,children:\"Get All\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",ref:get_id,className:\"form-control ml-2\",placeholder:\"Id\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input-group-append\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",ref:get_title,className:\"form-control ml-2\",placeholder:\"Title\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input-group-append\"})]}),getResult&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-secondary mt-2\",role:\"alert\",children:/*#__PURE__*/_jsx(\"pre\",{children:getResult})})]})]});}export default App;","map":{"version":3,"sources":["/home/user/mern/vincit-pre-assignment/src/App.js"],"names":["React","useRef","useState","App","baseURL","get_id","get_title","getResult","setGetResult","fortmatResponse","res","JSON","stringify","getAllData","fetch","ok","message","status","statusText","Error","json","data","result","headers","get","length","Object","values","forEach","value","console","log"],"mappings":"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","sourcesContent":[" import React, { useRef, useState } from \"react\";\n\n//Voisi valita url ajan kirjoittamalla sen nappuloihin, voi olla placeholder aika esimerkkinä\n//Käy for loopilla kerran läpi json ja merkkaa siinä arvot\n\nfunction App() {\n  const baseURL = \"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart\";\n\n  const get_id = useRef(null);\n  const get_title = useRef(null);\n\n  const [getResult, setGetResult] = useState(null);\n\n  const fortmatResponse = (res) => {\n    return JSON.stringify(res, null, 2);\n  }\n\n  async function getAllData() {\n    try {\n      const res = await fetch(`${baseURL}/range?vs_currency=eur&from=1577836800&to=1609376400`);\n\n      if (!res.ok) {\n        const message = `An error has occured: ${res.status} - ${res.statusText}`;\n        throw new Error(message);\n      }\n\n      const data = await res.json();\n\n      const result = {\n        status: res.status + \"-\" + res.statusText,\n        headers: {\n          \"Content-Type\": res.headers.get(\"Content-Type\"),\n          \"Content-Length\": res.headers.get(\"Content-Length\"),\n        },\n        length: res.headers.get(\"Content-Length\"),\n        data: data,\n      };\n\n      Object.values(data).forEach(value => {\n        console.log(value);\n     });\n\n      setGetResult(fortmatResponse(data));\n    } catch (err) {\n      setGetResult(err.message);\n    }\n  }\n\n  // async function getDataById() {\n  //   const id = get_id.current.value;\n\n  //   if (id) {\n  //     try {\n  //       const res = await fetch(`${baseURL}/tutorials/${id}`);\n\n  //       if (!res.ok) {\n  //         const message = `An error has occured: ${res.status} - ${res.statusText}`;\n  //         throw new Error(message);\n  //       }\n\n  //       const data = await res.json();\n\n  //       const result = {\n  //         data: data,\n  //         status: res.status,\n  //         statusText: res.statusText,\n  //         headers: {\n  //           \"Content-Type\": res.headers.get(\"Content-Type\"),\n  //           \"Content-Length\": res.headers.get(\"Content-Length\"),\n  //         },\n  //       };\n\n  //       setGetResult(fortmatResponse(result));\n  //     } catch (err) {\n  //       setGetResult(err.message);\n  //     }\n  //   }\n  // }\n\n  // async function getDataByTitle() {\n  //   const title = get_title.current.value;\n\n  //   if (title) {\n  //     try {\n  //       // const res = await fetch(`${baseURL}/tutorials?title=${title}`);\n\n  //       let url = new URL(`${baseURL}/tutorials`);\n  //       const params = { title: title };\n  //       url.search = new URLSearchParams(params);\n\n  //       const res = await fetch(url);\n\n  //       if (!res.ok) {\n  //         const message = `An error has occured: ${res.status} - ${res.statusText}`;\n  //         throw new Error(message);\n  //       }\n\n  //       const data = await res.json();\n\n  //       const result = {\n  //         status: res.status + \"-\" + res.statusText,\n  //         headers: {\n  //           \"Content-Type\": res.headers.get(\"Content-Type\"),\n  //           \"Content-Length\": res.headers.get(\"Content-Length\"),\n  //         },\n  //         data: data,\n  //       };\n\n  //       setGetResult(fortmatResponse(result));\n  //     } catch (err) {\n  //       setGetResult(err.message);\n  //     }\n  //   }\n  // }\n\n  // const clearGetOutput = () => {\n  //   setGetResult(null);\n  // }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">React Fetch GET - BezKoder.com</div>\n      <div className=\"card-body\">\n        <div className=\"input-group input-group-sm\">\n          <button className=\"btn btn-sm btn-primary\" onClick={getAllData}>Get All</button>\n\n          <input type=\"text\" ref={get_id} className=\"form-control ml-2\" placeholder=\"Id\" />\n          <div className=\"input-group-append\">\n            {/* <button className=\"btn btn-sm btn-primary\" onClick={getDataById}>Get by Id</button> */}\n          </div>\n\n          <input type=\"text\" ref={get_title} className=\"form-control ml-2\" placeholder=\"Title\" />\n          <div className=\"input-group-append\">\n            {/* <button className=\"btn btn-sm btn-primary\" onClick={getDataByTitle}>Find By Title</button> */}\n          </div>\n\n          {/* <button className=\"btn btn-sm btn-warning ml-2\" onClick={clearGetOutput}>Clear</button> */}\n        </div>   \n        \n        { getResult && <div className=\"alert alert-secondary mt-2\" role=\"alert\"><pre>{getResult}</pre></div> }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}