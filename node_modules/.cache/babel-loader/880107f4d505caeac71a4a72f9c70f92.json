{"ast":null,"code":"//Älä laske viimeistä tuntia mukaan\n//C) Aikaikkuna jonka loppupäätä liikutetaan alkuun korkeimpaan kohtaan, sitten alkupäätä matalimpaan.\n//Jos korkeampaa kohtaa ei löydy niin jää korkeaan. Etsi vielä matalampaa. Tämä alue on tutkittu.\n//Iskän idea eli ota loppupäästä korkein, sitten alkupäästä käy läpi, löytyy korkein profit. \n//Sitten siirrä looppupäätä alkuunpäin jos korkeampi löytyy, ja taas alusta hae matalinta\nexport function maximalprofitwindow(dataset) {\n  var window_start = 0;\n  var window_start_lowest = 0;\n  var window_end_date = 0;\n  var window_end_highest = 0;\n  var window_end_i = 0; //loppupää lopusta alkuun , pysähdy aina uuden korkeimman huipun kohdalle kunnes alussa.\n  //Kun korkein huippu niin mene alkupään kokeilulla alusta loppuun ja pysähdy alimmassa, merkkaa parhaaksi \n  //tulokseksi\n\n  var datalenght = Object.keys(dataset[\"total_volumes\"]).length; //var last_window_end = datalenght\n\n  var day_lowest_price = null;\n  var day_highest_price = null;\n  var highest_price = 0;\n  var lowest_price = 100000;\n\n  for (var i = datalenght - 1; i >= 0; i--) {\n    if (dataset[\"prices\"][i][1] > highest_price) {\n      highest_price = dataset[\"prices\"][i][1];\n      day_highest_price = dataset[\"prices\"][z][0]; //tule alusta tähän pisteeseen etsien alinta kohtaa\n\n      for (var z = 0; z < i; z++) {\n        if (dataset[\"prices\"][z][1] < lowest_price) {\n          lowest_price = dataset[\"prices\"][z][1];\n          day_lowest_price = dataset[\"prices\"][z][0];\n          console.log(lowest_price);\n        } //ota ylin-alin hinta ja niiden päivämäärät\n        //jos ylin-alin on negatiivinen niin ei kuulu ostaa tai myydä\n\n      } //[window_end_i,window_end_date, highest_price] = nexthighestprice(last_window_end,dataset)\n      //while (window_start >= window_end)\n      //window_start, lowprice = nextlowestprice(window_end)\n\n    } //if (dataset[\"prices\"][i][1]>)\n    //  dataset[\"prices\"][i][1]\n\n  }\n\n  console.log(highest_price - lowest_price);\n}","map":{"version":3,"sources":["/home/user/mern/vincit-pre-assignment/src/modules/MaximalProfitWindow.js"],"names":["maximalprofitwindow","dataset","window_start","window_start_lowest","window_end_date","window_end_highest","window_end_i","datalenght","Object","keys","length","day_lowest_price","day_highest_price","highest_price","lowest_price","i","z","console","log"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AAEA,OAAO,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;AACzC,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,mBAAmB,GAAG,CAA1B;AACA,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAIC,kBAAkB,GAAG,CAAzB;AAIA,MAAIC,YAAY,GAAG,CAAnB,CARyC,CAUzC;AACA;AACA;;AACA,MAAIC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYR,OAAO,CAAC,eAAD,CAAnB,EAAsCS,MAAvD,CAbyC,CAczC;;AACA,MAAIC,gBAAgB,GAAG,IAAvB;AACA,MAAIC,iBAAiB,GAAG,IAAxB;AACA,MAAIC,aAAa,GAAG,CAApB;AACA,MAAIC,YAAY,GAAG,MAAnB;;AACA,OAAK,IAAIC,CAAC,GAAGR,UAAU,GAAC,CAAxB,EAA2BQ,CAAC,IAAI,CAAhC,EAAmCA,CAAC,EAApC,EAAwC;AACpC,QAAId,OAAO,CAAC,QAAD,CAAP,CAAkBc,CAAlB,EAAqB,CAArB,IAA0BF,aAA9B,EAA8C;AAC1CA,MAAAA,aAAa,GAAGZ,OAAO,CAAC,QAAD,CAAP,CAAkBc,CAAlB,EAAqB,CAArB,CAAhB;AACAH,MAAAA,iBAAiB,GAAGX,OAAO,CAAC,QAAD,CAAP,CAAkBe,CAAlB,EAAqB,CAArB,CAApB,CAF0C,CAG1C;;AACA,WAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAApB,EAAuBC,CAAC,EAAxB,EAA2B;AACvB,YAAIf,OAAO,CAAC,QAAD,CAAP,CAAkBe,CAAlB,EAAqB,CAArB,IAA0BF,YAA9B,EAA6C;AACzCA,UAAAA,YAAY,GAAGb,OAAO,CAAC,QAAD,CAAP,CAAkBe,CAAlB,EAAqB,CAArB,CAAf;AACAL,UAAAA,gBAAgB,GAAGV,OAAO,CAAC,QAAD,CAAP,CAAkBe,CAAlB,EAAqB,CAArB,CAAnB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACP,SAL0B,CAM3B;AAEA;;AACH,OAb6C,CAc9C;AACD;AACK;;AACP,KAlBuC,CAoBxC;AACA;;AACH;;AACDG,EAAAA,OAAO,CAACC,GAAR,CAAYL,aAAa,GAACC,YAA1B;AACC","sourcesContent":["//Älä laske viimeistä tuntia mukaan\n//C) Aikaikkuna jonka loppupäätä liikutetaan alkuun korkeimpaan kohtaan, sitten alkupäätä matalimpaan.\n//Jos korkeampaa kohtaa ei löydy niin jää korkeaan. Etsi vielä matalampaa. Tämä alue on tutkittu.\n\n//Iskän idea eli ota loppupäästä korkein, sitten alkupäästä käy läpi, löytyy korkein profit. \n//Sitten siirrä looppupäätä alkuunpäin jos korkeampi löytyy, ja taas alusta hae matalinta\n\nexport function maximalprofitwindow(dataset) {\n    var window_start = 0\n    var window_start_lowest = 0\n    var window_end_date = 0\n    var window_end_highest = 0\n    \n    \n    \n    var window_end_i = 0\n    \n    //loppupää lopusta alkuun , pysähdy aina uuden korkeimman huipun kohdalle kunnes alussa.\n    //Kun korkein huippu niin mene alkupään kokeilulla alusta loppuun ja pysähdy alimmassa, merkkaa parhaaksi \n    //tulokseksi\n    var datalenght = Object.keys(dataset[\"total_volumes\"]).length;\n    //var last_window_end = datalenght\n    var day_lowest_price = null\n    var day_highest_price = null\n    var highest_price = 0\n    var lowest_price = 100000\n    for (var i = datalenght-1; i >= 0; i--) {\n        if (dataset[\"prices\"][i][1] > highest_price  ){\n            highest_price = dataset[\"prices\"][i][1]\n            day_highest_price = dataset[\"prices\"][z][0]\n            //tule alusta tähän pisteeseen etsien alinta kohtaa\n            for (var z = 0; z < i; z++){\n                if (dataset[\"prices\"][z][1] < lowest_price  ){\n                    lowest_price = dataset[\"prices\"][z][1]\n                    day_lowest_price = dataset[\"prices\"][z][0]\n                    console.log(lowest_price)\n            }\n            //ota ylin-alin hinta ja niiden päivämäärät\n            \n            //jos ylin-alin on negatiivinen niin ei kuulu ostaa tai myydä\n        }\n        //[window_end_i,window_end_date, highest_price] = nexthighestprice(last_window_end,dataset)\n       //while (window_start >= window_end)\n            //window_start, lowprice = nextlowestprice(window_end)\n    }\n    \n    //if (dataset[\"prices\"][i][1]>)\n    //  dataset[\"prices\"][i][1]\n}\nconsole.log(highest_price-lowest_price)\n}"]},"metadata":{},"sourceType":"module"}