{"ast":null,"code":"//Älä laske viimeistä tuntia mukaan\n//C) Aikaikkuna jonka loppupäätä liikutetaan alkuun korkeimpaan kohtaan, sitten alkupäätä matalimpaan.\n//Jos korkeampaa kohtaa ei löydy niin jää korkeaan. Etsi vielä matalampaa. Tämä alue on tutkittu.\n//Iskän idea eli ota loppupäästä korkein, sitten alkupäästä käy läpi, löytyy korkein profit. \n//Sitten siirrä looppupäätä alkuunpäin jos korkeampi löytyy, ja taas alusta hae matalinta\nexport function maximalprofitwindow(dataset) {\n  var window_start = 0;\n  var window_start_lowest = 0;\n  var window_end = 0;\n  var window_end_highest = 0;\n  var last_window_end = 0;\n  var highest_price = 0;\n  var lowest_price = 0;\n  var window_end_i = 0; //loppupää lopusta alkuun , pysähdy aina uuden korkeimman huipun kohdalle kunnes alussa.\n  //Kun korkein huippu niin mene alkupään kokeilulla alusta loppuun ja pysähdy alimmassa, merkkaa parhaaksi \n  //tulokseksi\n\n  var datalenght = Object.keys(dataset[\"total_volumes\"]).length;\n\n  for (var i = datalenght; i >= 0; i--) {\n    [window_end_i, window_end_date, highest_price] = nexthighestprice(last_window_end); //while (window_start >= window_end)\n    //window_start, lowprice = nextlowestprice(window_end)\n  } //if (dataset[\"prices\"][i][1]>)\n  //  dataset[\"prices\"][i][1]\n\n} //\n\nfunction nexthighestprice(last_window_end) {\n  console.log(\"Next highest price\");\n  var window_i = 0;\n  var window_end_date = 0;\n  var highest_price = 0;\n  return [window_i, window_end_date, highest_price];\n}","map":{"version":3,"sources":["/home/user/mern/vincit-pre-assignment/src/modules/MaximalProfitWindow.js"],"names":["maximalprofitwindow","dataset","window_start","window_start_lowest","window_end","window_end_highest","last_window_end","highest_price","lowest_price","window_end_i","datalenght","Object","keys","length","i","window_end_date","nexthighestprice","console","log","window_i"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AAEA,OAAO,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;AACzC,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,mBAAmB,GAAG,CAA1B;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,kBAAkB,GAAG,CAAzB;AACA,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAIC,aAAa,GAAG,CAApB;AACA,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,YAAY,GAAG,CAAnB,CARyC,CAUzC;AACA;AACA;;AACA,MAAIC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYX,OAAO,CAAC,eAAD,CAAnB,EAAsCY,MAAvD;;AACA,OAAK,IAAIC,CAAC,GAAGJ,UAAb,EAAyBI,CAAC,IAAI,CAA9B,EAAiCA,CAAC,EAAlC,EAAsC;AAClC,KAACL,YAAD,EAAcM,eAAd,EAA+BR,aAA/B,IAAgDS,gBAAgB,CAACV,eAAD,CAAhE,CADkC,CAEnC;AACK;AACP,GAlBwC,CAoBzC;AACA;;AACH,C,CACD;;AACA,SAASU,gBAAT,CAA0BV,eAA1B,EAA0C;AACtCW,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIJ,eAAe,GAAG,CAAtB;AACA,MAAIR,aAAa,GAAG,CAApB;AACA,SAAO,CAACY,QAAD,EAAUJ,eAAV,EAA2BR,aAA3B,CAAP;AACH","sourcesContent":["//Älä laske viimeistä tuntia mukaan\n//C) Aikaikkuna jonka loppupäätä liikutetaan alkuun korkeimpaan kohtaan, sitten alkupäätä matalimpaan.\n//Jos korkeampaa kohtaa ei löydy niin jää korkeaan. Etsi vielä matalampaa. Tämä alue on tutkittu.\n\n//Iskän idea eli ota loppupäästä korkein, sitten alkupäästä käy läpi, löytyy korkein profit. \n//Sitten siirrä looppupäätä alkuunpäin jos korkeampi löytyy, ja taas alusta hae matalinta\n\nexport function maximalprofitwindow(dataset) {\n    var window_start = 0\n    var window_start_lowest = 0\n    var window_end = 0\n    var window_end_highest = 0\n    var last_window_end = 0\n    var highest_price = 0\n    var lowest_price = 0\n    var window_end_i = 0\n    \n    //loppupää lopusta alkuun , pysähdy aina uuden korkeimman huipun kohdalle kunnes alussa.\n    //Kun korkein huippu niin mene alkupään kokeilulla alusta loppuun ja pysähdy alimmassa, merkkaa parhaaksi \n    //tulokseksi\n    var datalenght = Object.keys(dataset[\"total_volumes\"]).length;\n    for (var i = datalenght; i >= 0; i--) {\n        [window_end_i,window_end_date, highest_price] = nexthighestprice(last_window_end)\n       //while (window_start >= window_end)\n            //window_start, lowprice = nextlowestprice(window_end)\n    }\n\n    //if (dataset[\"prices\"][i][1]>)\n    //  dataset[\"prices\"][i][1]\n}\n//\nfunction nexthighestprice(last_window_end){\n    console.log(\"Next highest price\")\n    var window_i = 0 \n    var window_end_date = 0\n    var highest_price = 0\n    return [window_i,window_end_date, highest_price]\n}"]},"metadata":{},"sourceType":"module"}