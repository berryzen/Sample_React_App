{"ast":null,"code":"//Anna datasetti moduuliin funktiolle josta palautuvat arvot, josta laittaa komponenttiin\n//B) tulosta p채iv채 jona korkein voluumi ja voluumi\nexport function biggestvolume(dataset) {\n  var biggest_volume = 0;\n  var biggest_volume_day = null;\n  var datalenght = Object.keys(dataset[\"total_volumes\"]).length;\n\n  for (let i = 0; i < datalenght; i++) {\n    //console.log(dataset[\"total_volumes\"][i][1])\n    if (dataset[\"total_volumes\"][i][1] > biggest_volume) {\n      //console.log(\"NEW RECORD!\")\n      biggest_volume = dataset[\"total_volumes\"][i][1];\n      biggest_volume_day = dataset[\"total_volumes\"][i][0]; //console.log(biggest_volume)\n    }\n  }\n\n  const dateObject = new Date(biggest_volume_day);\n  const biggest_volume_day_to_date = dateObject.toLocaleString(); //2019-12-9 10:30:15\n\n  return [biggest_volume_day, biggest_volume];\n}","map":{"version":3,"sources":["/home/user/mern/vincit-pre-assignment/src/modules/BiggestVolume.js"],"names":["biggestvolume","dataset","biggest_volume","biggest_volume_day","datalenght","Object","keys","length","i","dateObject","Date","biggest_volume_day_to_date","toLocaleString"],"mappings":"AAAA;AACI;AACJ,OAAO,SAASA,aAAT,CAAuBC,OAAvB,EAAgC;AACnC,MAAIC,cAAc,GAAG,CAArB;AACA,MAAIC,kBAAkB,GAAG,IAAzB;AACA,MAAIC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYL,OAAO,CAAC,eAAD,CAAnB,EAAsCM,MAAvD;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAApB,EAAgCI,CAAC,EAAjC,EAAoC;AAClC;AACD,QAAIP,OAAO,CAAC,eAAD,CAAP,CAAyBO,CAAzB,EAA4B,CAA5B,IAAiCN,cAArC,EAAoD;AAClD;AACAA,MAAAA,cAAc,GAAGD,OAAO,CAAC,eAAD,CAAP,CAAyBO,CAAzB,EAA4B,CAA5B,CAAjB;AACAL,MAAAA,kBAAkB,GAAGF,OAAO,CAAC,eAAD,CAAP,CAAyBO,CAAzB,EAA4B,CAA5B,CAArB,CAHkD,CAIlD;AACF;AACF;;AAEG,QAAMC,UAAU,GAAG,IAAIC,IAAJ,CAASP,kBAAT,CAAnB;AACA,QAAMQ,0BAA0B,GAAGF,UAAU,CAACG,cAAX,EAAnC,CAfiC,CAe8B;;AAE/D,SAAO,CAACT,kBAAD,EAAqBD,cAArB,CAAP;AAEL","sourcesContent":["//Anna datasetti moduuliin funktiolle josta palautuvat arvot, josta laittaa komponenttiin\n    //B) tulosta p채iv채 jona korkein voluumi ja voluumi\nexport function biggestvolume(dataset) {\n    var biggest_volume = 0\n    var biggest_volume_day = null\n    var datalenght = Object.keys(dataset[\"total_volumes\"]).length;\n    for (let i = 0; i < datalenght; i++){\n      //console.log(dataset[\"total_volumes\"][i][1])\n     if (dataset[\"total_volumes\"][i][1] > biggest_volume){\n       //console.log(\"NEW RECORD!\")\n       biggest_volume = dataset[\"total_volumes\"][i][1]\n       biggest_volume_day = dataset[\"total_volumes\"][i][0]\n       //console.log(biggest_volume)\n    }\n  }\n      \n      const dateObject = new Date(biggest_volume_day)\n      const biggest_volume_day_to_date = dateObject.toLocaleString() //2019-12-9 10:30:15\n     \n      return [biggest_volume_day, biggest_volume]\n\n}"]},"metadata":{},"sourceType":"module"}