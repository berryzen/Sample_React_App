{"ast":null,"code":"var _jsxFileName = \"/home/user/mern/vincit-pre-assignment/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\"; //Voisi valita url ajan kirjoittamalla sen panikkeisiin, voi olla placeholder aika esimerkkinä\n//Käy for loopilla kerran läpi json ja merkkaa siinä arvot\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const baseURL = \"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart\";\n  const get_id = useRef(null);\n  const get_title = useRef(null);\n  const [getResult, setGetResult] = useState(null);\n\n  const fortmatResponse = res => {\n    return JSON.stringify(res, null, 2);\n  };\n\n  async function getAllData() {\n    try {\n      //Tee tähä päivämäärä muuttujat \n      //const start_date\n      //const end_date\n      //funktio, unixtime -> date-time\n      const res = await fetch(`${baseURL}/range?vs_currency=eur&from=1577836800&to=1609376400`);\n\n      if (!res.ok) {\n        const message = `An error has occured: ${res.status} - ${res.statusText}`;\n        throw new Error(message);\n      }\n\n      const data = await res.json();\n      Object.values(data).forEach(value => {\n        console.log(value);\n      });\n      setGetResult(fortmatResponse(data));\n    } catch (err) {\n      setGetResult(err.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: \"Get longest downtrend, date of highest volume, and maximal profit window\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group input-group-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-primary\",\n          onClick: getAllData,\n          children: \"Get All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: get_id,\n          className: \"form-control ml-2\",\n          placeholder: \"10.1.2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: get_title,\n          className: \"form-control ml-2\",\n          placeholder: \"20.1.2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), getResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-secondary mt-2\",\n        role: \"alert\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: getResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 81\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sFcpnkl5pZG8uKBaDc9Rz5jMWGE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/mern/vincit-pre-assignment/src/App.js"],"names":["React","useRef","useState","App","baseURL","get_id","get_title","getResult","setGetResult","fortmatResponse","res","JSON","stringify","getAllData","fetch","ok","message","status","statusText","Error","data","json","Object","values","forEach","value","console","log","err"],"mappings":";;;AAAC,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC,C,CAED;AACA;;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,OAAO,GAAG,6DAAhB;AAEA,QAAMC,MAAM,GAAGJ,MAAM,CAAC,IAAD,CAArB;AACA,QAAMK,SAAS,GAAGL,MAAM,CAAC,IAAD,CAAxB;AAEA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMO,eAAe,GAAIC,GAAD,IAAS;AAC/B,WAAOC,IAAI,CAACC,SAAL,CAAeF,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAAP;AACD,GAFD;;AAIA,iBAAeG,UAAf,GAA4B;AAC1B,QAAI;AAEF;AACA;AACA;AACA;AAEA,YAAMH,GAAG,GAAG,MAAMI,KAAK,CAAE,GAAEV,OAAQ,sDAAZ,CAAvB;;AAEA,UAAI,CAACM,GAAG,CAACK,EAAT,EAAa;AACX,cAAMC,OAAO,GAAI,yBAAwBN,GAAG,CAACO,MAAO,MAAKP,GAAG,CAACQ,UAAW,EAAxE;AACA,cAAM,IAAIC,KAAJ,CAAUH,OAAV,CAAN;AACD;;AAED,YAAMI,IAAI,GAAG,MAAMV,GAAG,CAACW,IAAJ,EAAnB;AAEAC,MAAAA,MAAM,CAACC,MAAP,CAAcH,IAAd,EAAoBI,OAApB,CAA4BC,KAAK,IAAI;AACnCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACF,OAFA;AAIAjB,MAAAA,YAAY,CAACC,eAAe,CAACW,IAAD,CAAhB,CAAZ;AACD,KArBD,CAqBE,OAAOQ,GAAP,EAAY;AACZpB,MAAAA,YAAY,CAACoB,GAAG,CAACZ,OAAL,CAAZ;AACD;AACF;;AAGD,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,wBAAlB;AAA2C,UAAA,OAAO,EAAEH,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,GAAG,EAAER,MAAxB;AAAgC,UAAA,SAAS,EAAC,mBAA1C;AAA8D,UAAA,WAAW,EAAC;AAA1E;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,GAAG,EAAEC,SAAxB;AAAmC,UAAA,SAAS,EAAC,mBAA7C;AAAiE,UAAA,WAAW,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAOIC,SAAS,iBAAI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAA4C,QAAA,IAAI,EAAC,OAAjD;AAAA,+BAAyD;AAAA,oBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA;AAAzD;AAAA;AAAA;AAAA;AAAA,cAPjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAtDQJ,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":[" import React, { useRef, useState } from \"react\";\n\n//Voisi valita url ajan kirjoittamalla sen panikkeisiin, voi olla placeholder aika esimerkkinä\n//Käy for loopilla kerran läpi json ja merkkaa siinä arvot\n\n\n\nfunction App() {\n  const baseURL = \"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart\";\n\n  const get_id = useRef(null);\n  const get_title = useRef(null);\n\n  const [getResult, setGetResult] = useState(null);\n\n  const fortmatResponse = (res) => {\n    return JSON.stringify(res, null, 2);\n  }\n\n  async function getAllData() {\n    try {\n\n      //Tee tähä päivämäärä muuttujat \n      //const start_date\n      //const end_date\n      //funktio, unixtime -> date-time\n\n      const res = await fetch(`${baseURL}/range?vs_currency=eur&from=1577836800&to=1609376400`);\n\n      if (!res.ok) {\n        const message = `An error has occured: ${res.status} - ${res.statusText}`;\n        throw new Error(message);\n      }\n\n      const data = await res.json();\n      \n      Object.values(data).forEach(value => {\n        console.log(value);\n     });\n\n      setGetResult(fortmatResponse(data));\n    } catch (err) {\n      setGetResult(err.message);\n    }\n  }\n\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">Get longest downtrend, date of highest volume, and maximal profit window</div>\n      <div className=\"card-body\">\n        <div className=\"input-group input-group-sm\">\n          <button className=\"btn btn-sm btn-primary\" onClick={getAllData}>Get All</button>\n          <input type=\"text\" ref={get_id} className=\"form-control ml-2\" placeholder=\"10.1.2021\" />\n          <input type=\"text\" ref={get_title} className=\"form-control ml-2\" placeholder=\"20.1.2021\" />\n        </div>   \n\n        { getResult && <div className=\"alert alert-secondary mt-2\" role=\"alert\"><pre>{getResult}</pre></div> }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}