{"ast":null,"code":"import _asyncToGenerator from\"/home/user/mern/assignment/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/user/mern/assignment/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/user/mern/assignment/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from\"react\";import Header from\"./components/Header\";import ShowHighestVolume from\"./components/ShowHighestVolume\";import ShowLongestDownTrend from\"./components/ShowLongestDownTrend\";import ShowMaxProfitWindow from\"./components/ShowMaxProfitWindow\";import{biggestvolume}from\"./modules/BiggestVolume\";import{hourstodays}from'./modules/HoursToDays';import{longestdowntrend}from'./modules/LongestDownTrend';import{maximalprofitwindow}from'./modules/MaximalProfitWindow';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),startDate=_useState2[0],setStartDate=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),endDate=_useState4[0],setEndDate=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),volume=_useState6[0],setVolume=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),downtrendrecord=_useState8[0],setDownTrendRecord=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),maximalprofit=_useState10[0],setMaximalProfit=_useState10[1];var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var startunixtime,endunixtime,res,dataset,daycount;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();startunixtime=Date.parse(startDate)/1000;endunixtime=Date.parse(endDate)/1000+3600;//Lisää 1h datahaun loppuun\n_context.next=5;return fetch(\"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart/range?vs_currency=eur&from=\"+startunixtime+\"&to=\"+endunixtime);case 5:res=_context.sent;_context.next=8;return res.json();case 8:dataset=_context.sent;//\"alle 90 päivää dataa\"\ndaycount=Math.abs(endunixtime*1000-startunixtime*1000)/86400000;if(daycount<=90){dataset=hourstodays(dataset);}setDownTrendRecord(longestdowntrend(dataset));setVolume(biggestvolume(dataset));setMaximalProfit(maximalprofitwindow(dataset));case 14:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"form\",{className:\"add-form\",onSubmit:fetchData,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Start date: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",onChange:function onChange(e){return setStartDate(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"End date: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",onChange:function onChange(e){return setEndDate(e.target.value);}})]}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Load data\",className:\"\"})]}),/*#__PURE__*/_jsx(ShowLongestDownTrend,{}),/*#__PURE__*/_jsxs(\"h3\",{style:{color:'blue'},children:[\"Longest Downtrend: \",downtrendrecord,\" \"]}),/*#__PURE__*/_jsx(ShowHighestVolume,{}),/*#__PURE__*/_jsxs(\"h3\",{style:{color:'blue'},children:[\"Date: \",volume[0],\" GMT +0200\"]}),/*#__PURE__*/_jsxs(\"h3\",{style:{color:'blue'},children:[\"Volume: \",volume[1],\" \\u20AC\"]}),/*#__PURE__*/_jsx(ShowMaxProfitWindow,{}),/*#__PURE__*/_jsxs(\"h3\",{style:{color:'blue'},children:[\"Start date: \",maximalprofit[0],\" \"]}),/*#__PURE__*/_jsxs(\"h3\",{style:{color:'blue'},children:[\"End date: \",maximalprofit[1],\" \"]})]});}export default App;","map":{"version":3,"sources":["/home/user/mern/assignment/src/App.js"],"names":["React","useState","useEffect","Header","ShowHighestVolume","ShowLongestDownTrend","ShowMaxProfitWindow","biggestvolume","hourstodays","longestdowntrend","maximalprofitwindow","App","startDate","setStartDate","endDate","setEndDate","volume","setVolume","downtrendrecord","setDownTrendRecord","maximalprofit","setMaximalProfit","fetchData","e","preventDefault","startunixtime","Date","parse","endunixtime","fetch","res","json","dataset","daycount","Math","abs","target","value","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport Header from \"./components/Header\"\nimport ShowHighestVolume from \"./components/ShowHighestVolume\"\nimport ShowLongestDownTrend from \"./components/ShowLongestDownTrend\"\nimport ShowMaxProfitWindow from \"./components/ShowMaxProfitWindow\"\nimport { biggestvolume } from \"./modules/BiggestVolume\"\nimport { hourstodays } from './modules/HoursToDays'\nimport { longestdowntrend } from './modules/LongestDownTrend'\nimport {maximalprofitwindow} from './modules/MaximalProfitWindow'\n\n\nfunction App() {\n  const [startDate, setStartDate] = useState(null);  \n  const [endDate, setEndDate] = useState(null);  \n  const [volume, setVolume] = useState(0);\n  const [downtrendrecord, setDownTrendRecord] = useState(0);\n  const [maximalprofit, setMaximalProfit] = useState(false);\n  \n  const fetchData = async (e) => {\n    e.preventDefault()\n    const startunixtime = ((Date.parse(startDate))/1000)\n    const endunixtime = ((Date.parse(endDate))/1000)+3600 //Lisää 1h datahaun loppuun\n    const res = await fetch(\"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart/range?vs_currency=eur&from=\"+startunixtime+\"&to=\"+endunixtime)\n    var dataset = await res.json() \n    \n    //\"alle 90 päivää dataa\"\n    var daycount = (Math.abs(endunixtime*1000-startunixtime*1000)/86400000)\n    if (daycount <= 90){\n      dataset = hourstodays(dataset)\n    }\n\n    setDownTrendRecord(longestdowntrend(dataset))\n    setVolume(biggestvolume(dataset))\n    setMaximalProfit(maximalprofitwindow(dataset))\n  }  \n\n\n\n  return (\n    \n    <div className=\"container\">\n      <Header />      \n      <form className='add-form' onSubmit={fetchData}>\n      <div className='form-control'>\n                <label>Start date: </label>\n                <input type='date' \n                onChange={(e) => setStartDate(e.target.value)}\n                />\n            \n          </div>\n          <div className='form-control'>\n                <label>End date: </label>\n                <input type='date' \n                onChange={(e) => setEndDate(e.target.value)}/>\n          </div>\n          <input type='submit' value='Load data'\n          className=''/>\n     </form>\n     \n      <ShowLongestDownTrend />\n      <h3 style={{ color: 'blue' }}>Longest Downtrend: {downtrendrecord} </h3>\n      <ShowHighestVolume />\n      <h3 style={{ color: 'blue' }}>Date: {volume[0]} GMT +0200</h3>\n      <h3 style={{ color: 'blue' }}>Volume: {volume[1]} €</h3>\n      <ShowMaxProfitWindow />\n      <h3 style={{ color: 'blue' }}>Start date: {(maximalprofit[0]) } </h3>\n      <h3 style={{ color: 'blue' }}>End date: {(maximalprofit[1]) } </h3>\n    </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}