{"ast":null,"code":"var _jsxFileName = \"/home/user/mern/vincit-pre-assignment/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport ShowHighestVolume from \"./components/ShowHighestVolume\";\nimport ShowLongestDownTrend from \"./components/ShowLongestDownTrend\";\nimport ShowMaxProfitWindow from \"./components/ShowMaxProfitWindow\"; //Voisi valita url ajan kirjoittamalla sen panikkeisiin, voi olla placeholder aika esimerkkinä\n//Käy for loopilla kerran läpi json ja merkkaa siinä arvot\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [getResult, setGetResult] = useState(null);\n  const [getStartDate, setStartDate] = useState(null);\n  const [getEndDate, setEndDate] = useState(null); //Input painikkeet päivämäärille jotka välitetään fetchTaskille\n\n  const fortmatResponse = res => {\n    return JSON.stringify(res, null, 2);\n  }; // Fetch Tasks\n\n\n  const fetchTasks = async e => {\n    e.preventDefault();\n    console.log(getStartDate);\n    console.log(Date.parse(getStartDate) / 1000);\n    const res = await fetch(\"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart/range?vs_currency=eur&from=1577836800&to=1609376400\");\n    const data = await res.json();\n    setGetResult(fortmatResponse(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-form\",\n      onSubmit: fetchTasks,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Start date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          onChange: e => setStartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"End date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Load data\",\n        className: \"btn btn-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShowLongestDownTrend, {\n      data: getResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShowHighestVolume, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShowMaxProfitWindow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CLmqXpUPwmWEu7P3Pi6pkhHof/k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/mern/vincit-pre-assignment/src/App.js"],"names":["React","useState","Header","ShowHighestVolume","ShowLongestDownTrend","ShowMaxProfitWindow","App","getResult","setGetResult","getStartDate","setStartDate","getEndDate","setEndDate","fortmatResponse","res","JSON","stringify","fetchTasks","e","preventDefault","console","log","Date","parse","fetch","data","json","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;AACA,OAAOC,mBAAP,MAAgC,kCAAhC,C,CACA;AACA;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,YAAD,EAAeC,YAAf,IAA+BT,QAAQ,CAAC,IAAD,CAA7C;AACA,QAAM,CAACU,UAAD,EAAaC,UAAb,IAA2BX,QAAQ,CAAC,IAAD,CAAzC,CAHa,CAIb;;AAGA,QAAMY,eAAe,GAAIC,GAAD,IAAS;AAC/B,WAAOC,IAAI,CAACC,SAAL,CAAeF,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAAP;AAAqC,GADvC,CAPa,CAUb;;;AACA,QAAMG,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,YAAZ;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWd,YAAX,IAAyB,IAArC;AAEA,UAAMK,GAAG,GAAG,MAAMU,KAAK,CAAC,iHAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMX,GAAG,CAACY,IAAJ,EAAnB;AAEAlB,IAAAA,YAAY,CAACK,eAAe,CAACY,IAAD,CAAhB,CAAZ;AACD,GAVD;;AAaA,sBAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAA2B,MAAA,QAAQ,EAAER,UAArC;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADV,eAEU;AAAO,UAAA,IAAI,EAAC,MAAZ;AACA,UAAA,QAAQ,EAAGC,CAAD,IAAOR,YAAY,CAACQ,CAAC,CAACS,MAAF,CAASC,KAAV;AAD7B;AAAA;AAAA;AAAA;AAAA,gBAFV;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAQI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADN,eAEM;AAAO,UAAA,IAAI,EAAC,MAAZ;AACA,UAAA,QAAQ,EAAGV,CAAD,IAAON,UAAU,CAACM,CAAC,CAACS,MAAF,CAASC,KAAV;AAD3B;AAAA;AAAA;AAAA;AAAA,gBAFN;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAaI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,WAA3B;AACA,QAAA,SAAS,EAAC;AADV;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAkBE,QAAC,oBAAD;AAAsB,MAAA,IAAI,EAAErB;AAA5B;AAAA;AAAA;AAAA;AAAA,YAlBF,eAmBE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YAnBF,eAoBE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAyBD;;GAjDQD,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\"\nimport Header from \"./components/Header\"\nimport ShowHighestVolume from \"./components/ShowHighestVolume\"\nimport ShowLongestDownTrend from \"./components/ShowLongestDownTrend\"\nimport ShowMaxProfitWindow from \"./components/ShowMaxProfitWindow\"\n//Voisi valita url ajan kirjoittamalla sen panikkeisiin, voi olla placeholder aika esimerkkinä\n//Käy for loopilla kerran läpi json ja merkkaa siinä arvot\n\n\nfunction App() {\n  const [getResult, setGetResult] = useState(null);  \n  const [getStartDate, setStartDate] = useState(null);  \n  const [getEndDate, setEndDate] = useState(null);  \n  //Input painikkeet päivämäärille jotka välitetään fetchTaskille\n\n\n  const fortmatResponse = (res) => {\n    return JSON.stringify(res, null, 2);}\n\n  // Fetch Tasks\n  const fetchTasks = async (e) => {\n    e.preventDefault()\n    \n    console.log(getStartDate)\n    console.log(Date.parse(getStartDate)/1000)\n  \n    const res = await fetch(\"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart/range?vs_currency=eur&from=1577836800&to=1609376400\")\n    const data = await res.json()\n  \n    setGetResult(fortmatResponse(data));\n  }  \n\n  \n  return (\n    \n    <div className=\"container\">\n      <Header />      \n      <form className='add-form' onSubmit={fetchTasks}>\n      <div className='form-control'>\n                <label>Start date: </label>\n                <input type='date' \n                onChange={(e) => setStartDate(e.target.value)}\n                />\n                \n          </div>\n          <div className='form-control'>\n                <label>End date: </label>\n                <input type='date' \n                onChange={(e) => setEndDate(e.target.value)}/>\n          </div>\n          <input type='submit' value='Load data'\n          className='btn btn-block'/>\n      </form>\n      <ShowLongestDownTrend data={getResult}/>\n      <ShowHighestVolume />\n      <ShowMaxProfitWindow />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}